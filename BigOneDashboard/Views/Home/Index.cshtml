@using Newtonsoft.Json;

@model DashboardViewModel
@{
    ViewData["Title"] = "Home Page";
    var message = TempData["Message"] as string;
    var messageType = TempData["MessageType"] as string;
    Guild? currentGuild = null;
    string? guild = Context.Session.GetString("CurrentGuild");
    if (guild != null)
    {
        currentGuild = JsonConvert.DeserializeObject<Guild>(guild);
    }
}

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/emojionearea/3.4.2/emojionearea.css" />
<!-- Toast Message -->
@if (!string.IsNullOrEmpty(message))
{
    <div id="toast-message" class="fixed top-[77px] right-4 @(messageType == "Success" ? "bg-green-500" : "bg-red-500") text-white px-4 py-2 rounded">
        @message
    </div>
}

@if (currentGuild != null)
{
<div class="px-2 py-4 md:px-4 tw-pt-8 grid auto-rows-[42px] gap-5" style="grid-template-columns: repeat(12, minmax(0, 128px));">
    @* Now Playing *@
    <div id="NowPlayingCard" class="dark:bg-gray-600 dark:!text-white border border-gray-400 rounded-[16px] shadow-lg background-gray-400 col-span-12 row-span-8">
        <div class="w-full h-full mx-auto my-8">
            <div class="flex flex-row w-full px-8 rounded-lg">
                <div class="bg-white dark:!bg-gray-700 border border-gray-400 px-8 pt-8 rounded-lg shadow-md w-80">
                    <audio id="nowPlayingAudio">
                        <source src="@Url.Action("DownloadYtMP3", "Home", new { url = Model.Sounds[0] })" type="audio/mp3">
                        Your browser does not support the audio element.
                    </audio>
                    <!-- Video Player -->
                    <iframe id="nowPlayingVideo" src="https://www.youtube.com/embed/1VUa99-tJqs" class="w-64 h-64 mx-auto rounded-lg mb-4 shadow-lg shadow-teal-50" title="Migos - T-Shirt [Official Video]" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>
                    <!-- Song Title -->
                    <h2 class="text-xl font-semibold text-center">T-Shirt</h2>
                    <!-- Artist Name -->
                    <p class="text-gray-600 dark:!text-white text-sm text-center">Migos</p>
                    <!-- Music Controls -->
                    <div class="mt-6 flex justify-center items-center">
                        <button class="p-3 rounded-full bg-gray-200 hover:bg-gray-300 focus:outline-none">
                            <svg width="64px" height="64px" viewBox="0 0 24 24" class="w-4 h-4 text-gray-600 dark:!text-white" fill="none" xmlns="http://www.w3.org/2000/svg" transform="matrix(-1, 0, 0, 1, 0, 0)">
                                <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
                                <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
                                <g id="SVGRepo_iconCarrier">
                                    <path d="M16.6598 14.6474C18.4467 13.4935 18.4467 10.5065 16.6598 9.35258L5.87083 2.38548C4.13419 1.26402 2 2.72368 2 5.0329V18.9671C2 21.2763 4.13419 22.736 5.87083 21.6145L16.6598 14.6474Z" fill="#000000"></path>
                                    <path d="M22.75 5C22.75 4.58579 22.4142 4.25 22 4.25C21.5858 4.25 21.25 4.58579 21.25 5V19C21.25 19.4142 21.5858 19.75 22 19.75C22.4142 19.75 22.75 19.4142 22.75 19V5Z" fill="#000000"></path>
                                </g>
                            </svg>
                        </button>
                        <button class="p-4 rounded-full bg-gray-200 hover:bg-gray-300 focus:outline-none mx-4" id="nowPlayingPause">
                            <svg width="64px" height="64px" viewBox="0 0 24 24" class="w-6 h-6 text-gray-600 dark:!text-white" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
                                <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
                                <g id="SVGRepo_iconCarrier">
                                    <path d="M2 6C2 4.11438 2 3.17157 2.58579 2.58579C3.17157 2 4.11438 2 6 2C7.88562 2 8.82843 2 9.41421 2.58579C10 3.17157 10 4.11438 10 6V18C10 19.8856 10 20.8284 9.41421 21.4142C8.82843 22 7.88562 22 6 22C4.11438 22 3.17157 22 2.58579 21.4142C2 20.8284 2 19.8856 2 18V6Z" fill="#000000"></path>
                                    <path d="M14 6C14 4.11438 14 3.17157 14.5858 2.58579C15.1716 2 16.1144 2 18 2C19.8856 2 20.8284 2 21.4142 2.58579C22 3.17157 22 4.11438 22 6V18C22 19.8856 22 20.8284 21.4142 21.4142C20.8284 22 19.8856 22 18 22C16.1144 22 15.1716 22 14.5858 21.4142C14 20.8284 14 19.8856 14 18V6Z" fill="#000000"></path>
                                </g>
                            </svg>
                        </button>
                        <button class="p-4 rounded-full bg-gray-200 hover:bg-gray-300 focus:outline-none mx-4 hidden" id="nowPlayingPlay">
                            <svg width="64px" height="64px" xmlns="http://www.w3.org/2000/svg" data-type="play" class="size-6 text-gray-600" viewBox="0 0 384 512">
                                <!--!Font Awesome Free 6.5.2 by fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->
                                <path d="M73 39c-14.8-9.1-33.4-9.4-48.5-.9S0 62.6 0 80V432c0 17.4 9.4 33.4 24.5 41.9s33.7 8.1 48.5-.9L361 297c14.3-8.7 23-24.2 23-41s-8.7-32.2-23-41L73 39z" fill="#000000" />
                            </svg>
                        </button>
                        <button class="p-3 rounded-full bg-gray-200 hover:bg-gray-300 focus:outline-none" id="nowPlayingSkip">
                            <svg width="64px" height="64px" viewBox="0 0 24 24" class="w-4 h-4 text-gray-600 dark:!text-white" fill="none" xmlns="http://www.w3.org/2000/svg">
                                <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
                                <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
                                <g id="SVGRepo_iconCarrier">
                                    <path d="M16.6598 14.6474C18.4467 13.4935 18.4467 10.5065 16.6598 9.35258L5.87083 2.38548C4.13419 1.26402 2 2.72368 2 5.0329V18.9671C2 21.2763 4.13419 22.736 5.87083 21.6145L16.6598 14.6474Z" fill="#000000"></path>
                                    <path d="M22.75 5C22.75 4.58579 22.4142 4.25 22 4.25C21.5858 4.25 21.25 4.58579 21.25 5V19C21.25 19.4142 21.5858 19.75 22 19.75C22.4142 19.75 22.75 19.4142 22.75 19V5Z" fill="#000000"></path>
                                </g>
                            </svg>
                        </button>
                    </div>
                    <!-- Progress Bar -->
                    <div class="mt-6 bg-gray-200 h-2 rounded-full">
                        <div class="bg-teal-500 h-2 rounded-full w-1/2"></div>
                    </div>
                    <!-- Time Information -->
                    <div class="flex justify-between mt-2 text-sm text-gray-600 dark:!text-white">
                        <span id="nowPlayingCurrentTime">1:57</span>
                        <span id="nowPlayingDuration">3:53</span>
                    </div>
                </div>
                @* Queue *@
                <div class="flex flex-col w-full ml-4">
                    <div class="p-4 w-full max-h-[290px] border border-gray-600 rounded-[16px] shadow-sm overflow-y-auto smoothScroll">
                        @foreach (Sound sound in Model.Sounds)
                        {
                            <div class="flex items-center p-4 w-full border border-gray-600 rounded-[16px] shadow-sm dark:bg-gray-700 mb-4 justify-between" data-itemType="sound">
                                <div class="flex items-center space-x-4 truncate" style="align-items:center;">
                                    <div class="truncate">@sound.Emote</div>
                                    <div class="truncate text-gray-300">@sound.Name</div>
                                </div>
                                <div class="flex items-center space-x-2 ml-auto">
                                    <div class="audio-player bg-gray-200 dark:bg-gray-700 px-4 ">
                                        <audio id="audio">
                                            <source src="@Url.Action("GetSound", "Home", new { soundName = sound.Name, filePath = sound.FilePath })" type="audio/mp3">
                                            Your browser does not support the audio element.
                                        </audio>
                                        <div class="controls flex items-center gap-4">
                                            <button class="" data-type="playPauseBtn">
                                                <svg xmlns="http://www.w3.org/2000/svg" data-type="play" class="size-6 text-sky-500 hover:text-sky-600" fill="currentColor" viewBox="0 0 384 512">
                                                    <!--!Font Awesome Free 6.5.2 by fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->
                                                    <path d="M73 39c-14.8-9.1-33.4-9.4-48.5-.9S0 62.6 0 80V432c0 17.4 9.4 33.4 24.5 41.9s33.7 8.1 48.5-.9L361 297c14.3-8.7 23-24.2 23-41s-8.7-32.2-23-41L73 39z" />
                                                </svg>
                                                <svg xmlns="http://www.w3.org/2000/svg" data-type="pause" class="size-6 text-sky-500 hover:text-sky-600 hidden" fill="currentColor" viewBox="0 0 320 512">
                                                    <!--!Font Awesome Free 6.5.2 by fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->
                                                    <path d="M48 64C21.5 64 0 85.5 0 112V400c0 26.5 21.5 48 48 48H80c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48H48zm192 0c-26.5 0-48 21.5-48 48V400c0 26.5 21.5 48 48 48h32c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48H240z" />
                                                </svg>
                                            </button>
                                            <input type="range" class="hidden lg:block" data-type="seekSlider" value="0" class="flex-grow">
                                            <span data-type="currentTime" class="hidden xl:block w-12 text-center">0:00</span>
                                            <span data-type="duration" class="hidden xl:block w-12 text-center">0:00</span>
                                        </div>
                                    </div>

                                    <div class="ml-auto flex items-center space-x-2">
                                        <button type="button" data-bs-toggle="modal" data-bs-target="#editSoundModal" onclick="setModalSoundId('editSoundModal','@sound.Id')" style="margin-right:16px;">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="size-6 text-blue-500 hover:text-blue-600" fill="currentColor" viewBox="0 0 512 512">
                                                <!--!Font Awesome Free 6.5.2 by fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->
                                                <path d="M471.6 21.7c-21.9-21.9-57.3-21.9-79.2 0L362.3 51.7l97.9 97.9 30.1-30.1c21.9-21.9 21.9-57.3 0-79.2L471.6 21.7zm-299.2 220c-6.1 6.1-10.8 13.6-13.5 21.9l-29.6 88.8c-2.9 8.6-.6 18.1 5.8 24.6s15.9 8.7 24.6 5.8l88.8-29.6c8.2-2.7 15.7-7.4 21.9-13.5L437.7 172.3 339.7 74.3 172.4 241.7zM96 64C43 64 0 107 0 160V416c0 53 43 96 96 96H352c53 0 96-43 96-96V320c0-17.7-14.3-32-32-32s-32 14.3-32 32v96c0 17.7-14.3 32-32 32H96c-17.7 0-32-14.3-32-32V160c0-17.7 14.3-32 32-32h96c17.7 0 32-14.3 32-32s-14.3-32-32-32H96z" />
                                            </svg>
                                        </button>
                                        <button type="button" data-bs-toggle="modal" data-bs-target="#deleteSoundModal" onclick="setModalSoundId('deleteSoundModal','@sound.Id')">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="size-6 text-red-500 hover:text-red-600" fill="currentColor" viewBox="0 0 448 512">
                                                <!--!Font Awesome Free 6.5.2 by fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->
                                                <path d="M135.2 17.7L128 32H32C14.3 32 0 46.3 0 64S14.3 96 32 96H416c17.7 0 32-14.3 32-32s-14.3-32-32-32H320l-7.2-14.3C307.4 6.8 296.3 0 284.2 0H163.8c-12.1 0-23.2 6.8-28.6 17.7zM416 128H32L53.2 467c1.6 25.3 22.6 45 47.9 45H346.9c25.3 0 46.3-19.7 47.9-45L416 128z" />
                                            </svg>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                    @* History *@
                    <div class="p-4 mt-4 w-full max-h-[290px] border border-gray-600 rounded-[16px] shadow-sm overflow-y-auto smoothScroll">
                        @foreach (Sound sound in Model.Sounds)
                        {
                            <div class="flex items-center p-4 w-full border border-gray-600 rounded-[16px] shadow-sm dark:bg-gray-700 mb-4 justify-between" data-itemType="sound">
                                <div class="flex items-center space-x-4 truncate" style="align-items:center;">
                                    <div class="truncate">@sound.Emote</div>
                                    <div class="truncate text-gray-300">@sound.Name</div>
                                </div>
                                <div class="flex items-center space-x-2 ml-auto">
                                    <div class="audio-player bg-gray-200 dark:bg-gray-700 px-4 ">
                                        <audio id="audio">
                                            <source src="@Url.Action("GetSound", "Home", new { soundName = sound.Name, filePath = sound.FilePath })" type="audio/mp3">
                                            Your browser does not support the audio element.
                                        </audio>
                                        <div class="controls flex items-center gap-4">
                                            <button class="" data-type="playPauseBtn">
                                                <svg xmlns="http://www.w3.org/2000/svg" data-type="play" class="size-6 text-sky-500 hover:text-sky-600" fill="currentColor" viewBox="0 0 384 512">
                                                    <!--!Font Awesome Free 6.5.2 by fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->
                                                    <path d="M73 39c-14.8-9.1-33.4-9.4-48.5-.9S0 62.6 0 80V432c0 17.4 9.4 33.4 24.5 41.9s33.7 8.1 48.5-.9L361 297c14.3-8.7 23-24.2 23-41s-8.7-32.2-23-41L73 39z" />
                                                </svg>
                                                <svg xmlns="http://www.w3.org/2000/svg" data-type="pause" class="size-6 text-sky-500 hover:text-sky-600 hidden" fill="currentColor" viewBox="0 0 320 512">
                                                    <!--!Font Awesome Free 6.5.2 by fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->
                                                    <path d="M48 64C21.5 64 0 85.5 0 112V400c0 26.5 21.5 48 48 48H80c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48H48zm192 0c-26.5 0-48 21.5-48 48V400c0 26.5 21.5 48 48 48h32c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48H240z" />
                                                </svg>
                                            </button>
                                            <input type="range" class="hidden lg:block" data-type="seekSlider" value="0" class="flex-grow">
                                            <span data-type="currentTime" class="hidden xl:block w-12 text-center">0:00</span>
                                            <span data-type="duration" class="hidden xl:block w-12 text-center">0:00</span>
                                        </div>
                                    </div>

                                    <div class="ml-auto flex items-center space-x-2">
                                        <button type="button" data-bs-toggle="modal" data-bs-target="#editSoundModal" onclick="setModalSoundId('editSoundModal','@sound.Id')" style="margin-right:16px;">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="size-6 text-blue-500 hover:text-blue-600" fill="currentColor" viewBox="0 0 512 512">
                                                <!--!Font Awesome Free 6.5.2 by fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->
                                                <path d="M471.6 21.7c-21.9-21.9-57.3-21.9-79.2 0L362.3 51.7l97.9 97.9 30.1-30.1c21.9-21.9 21.9-57.3 0-79.2L471.6 21.7zm-299.2 220c-6.1 6.1-10.8 13.6-13.5 21.9l-29.6 88.8c-2.9 8.6-.6 18.1 5.8 24.6s15.9 8.7 24.6 5.8l88.8-29.6c8.2-2.7 15.7-7.4 21.9-13.5L437.7 172.3 339.7 74.3 172.4 241.7zM96 64C43 64 0 107 0 160V416c0 53 43 96 96 96H352c53 0 96-43 96-96V320c0-17.7-14.3-32-32-32s-32 14.3-32 32v96c0 17.7-14.3 32-32 32H96c-17.7 0-32-14.3-32-32V160c0-17.7 14.3-32 32-32h96c17.7 0 32-14.3 32-32s-14.3-32-32-32H96z" />
                                            </svg>
                                        </button>
                                        <button type="button" data-bs-toggle="modal" data-bs-target="#deleteSoundModal" onclick="setModalSoundId('deleteSoundModal','@sound.Id')">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="size-6 text-red-500 hover:text-red-600" fill="currentColor" viewBox="0 0 448 512">
                                                <!--!Font Awesome Free 6.5.2 by fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->
                                                <path d="M135.2 17.7L128 32H32C14.3 32 0 46.3 0 64S14.3 96 32 96H416c17.7 0 32-14.3 32-32s-14.3-32-32-32H320l-7.2-14.3C307.4 6.8 296.3 0 284.2 0H163.8c-12.1 0-23.2 6.8-28.6 17.7zM416 128H32L53.2 467c1.6 25.3 22.6 45 47.9 45H346.9c25.3 0 46.3-19.7 47.9-45L416 128z" />
                                            </svg>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

    @*Save new sound*@
    <div id="SaveNewSoundCard" class="dark:bg-gray-600 dark:!text-white border border-gray-400 rounded-[16px] shadow-lg !col-span-12 !row-span-6 md:!col-span-4 md:!row-span-7">
        <div class="w-full h-full mx-auto my-8">
            <div class="flex flex-col w-full px-8 rounded-lg">
                <h2 class="text-2xl mb-4 font-bold">Save New Sound</h2>
                <div class="hidden lg:block">
                    <p><strong>Server:</strong> @Model.Guild.Name</p>
                </div>
                <p><strong>Discord User:</strong> @Model.DiscordName</p>
                @using (Html.BeginForm("SaveNewSound", "Home", FormMethod.Post, new { id = "SaveNewSound", enctype = "multipart/form-data" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(m => m.SaveNewSoundViewModel.serverId)

                    <div class="mt-4">
                        @Html.LabelFor(m => m.SaveNewSoundViewModel.Name, new { @class = "block text-sm font-medium text-gray-300" })
                        @Html.TextBoxFor(m => m.SaveNewSoundViewModel.Name, new { @class = "mt-1 p-2 w-full border rounded-md dark:!bg-gray-300 dark:!text-gray-900", id = "Name" })
                        @Html.ValidationMessageFor(m => m.SaveNewSoundViewModel.Name, "", new { @class = "text-red-600 text-sm" })
                    </div>

                    <div class="mt-4">
                        @Html.LabelFor(m => m.SaveNewSoundViewModel.Emote, new { @class = "block text-sm font-medium text-gray-300" })
                        <input id="EmoteSelector" name="@Html.NameFor(m => m.SaveNewSoundViewModel.Emote)" class="mt-1 p-2 w-full border rounded-md dark:!bg-gray-300 dark:!text-gray-900" />
                        @Html.ValidationMessageFor(m => m.SaveNewSoundViewModel.Emote, "", new { @class = "text-red-600 text-sm" })
                    </div>

                    <div class="mt-4">
                        @Html.LabelFor(m => m.SaveNewSoundViewModel.File, new { @class = "block text-sm font-medium text-gray-300" })
                        <input type="file" id="File" name="@Html.NameFor(m => m.SaveNewSoundViewModel.File)" class="mt-1 block w-full px-3 py-2 border rounded-md" />
                        @Html.ValidationMessageFor(m => m.SaveNewSoundViewModel.File, "", new { @class = "text-red-600 text-sm" })
                    </div>

                    <div class="mt-4">
                        <button type="submit" class="px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-600">Save</button>
                    </div>
                }
            </div>
        </div>
    </div>

    @*Soundboard display*@
    <div id="SoundboardCard" class="dark:bg-gray-600 dark:!text-white border border-gray-400 rounded-[16px] shadow-lg background-gray-400 !col-span-12 md:!col-span-8 !row-span-7">
        <div class="w-full h-full mx-auto my-8">
                <div class="flex flex-col w-full px-8 rounded-lg">
                <h2 class="text-2xl mb-2 font-bold">Soundboard</h2>
                <p class="mb-4"><strong>Server:</strong> @Model.Guild.Name</p>
                <div class="p-4 w-full max-h-[400px] border border-gray-600 rounded-[16px] shadow-sm overflow-y-auto smoothScroll">
                    @foreach (Sound sound in Model.Sounds)
                    {
                        <div class="flex items-center p-4 w-full border border-gray-600 rounded-[16px] shadow-sm dark:bg-gray-700 mb-4 justify-between" data-itemType="sound">
                            <div class="flex items-center space-x-4 truncate" style="align-items:center;">
                                <div class="truncate">@sound.Emote</div>
                                <div class="truncate text-gray-300">@sound.Name</div>
                            </div>
                            <div class="flex items-center space-x-2 ml-auto">
                                <div class="audio-player bg-gray-200 dark:bg-gray-700 px-4 ">
                                    <audio id="audio">
                                        <source src="@Url.Action("GetSound", "Home", new { soundName = sound.Name, filePath = sound.FilePath })" type="audio/mp3">
                                        Your browser does not support the audio element.
                                    </audio>
                                    <div class="controls flex items-center gap-4">
                                        <button class="" data-type="playPauseBtn">
                                            <svg xmlns="http://www.w3.org/2000/svg" data-type="play" class="size-6 text-sky-500 hover:text-sky-600" fill="currentColor" viewBox="0 0 384 512">
                                                <!--!Font Awesome Free 6.5.2 by fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->
                                                <path d="M73 39c-14.8-9.1-33.4-9.4-48.5-.9S0 62.6 0 80V432c0 17.4 9.4 33.4 24.5 41.9s33.7 8.1 48.5-.9L361 297c14.3-8.7 23-24.2 23-41s-8.7-32.2-23-41L73 39z" />
                                            </svg>
                                            <svg xmlns="http://www.w3.org/2000/svg" data-type="pause" class="size-6 text-sky-500 hover:text-sky-600 hidden" fill="currentColor" viewBox="0 0 320 512">
                                                <!--!Font Awesome Free 6.5.2 by fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->
                                                <path d="M48 64C21.5 64 0 85.5 0 112V400c0 26.5 21.5 48 48 48H80c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48H48zm192 0c-26.5 0-48 21.5-48 48V400c0 26.5 21.5 48 48 48h32c26.5 0 48-21.5 48-48V112c0-26.5-21.5-48-48-48H240z" />
                                            </svg>
                                        </button>
                                        <input type="range" class="hidden lg:block" data-type="seekSlider" value="0" class="flex-grow">
                                        <span data-type="currentTime" class="hidden xl:block w-12 text-center">0:00</span>
                                        <span data-type="duration" class="hidden xl:block w-12 text-center">0:00</span>
                                    </div>
                                </div>
                            
                                <div class="ml-auto flex items-center space-x-2">
                                    <button type="button" data-bs-toggle="modal" data-bs-target="#editSoundModal" onclick="setModalSoundId('editSoundModal','@sound.Id')" style="margin-right:16px;">
                                        <svg xmlns="http://www.w3.org/2000/svg" class="size-6 text-blue-500 hover:text-blue-600" fill="currentColor" viewBox="0 0 512 512">
                                            <!--!Font Awesome Free 6.5.2 by fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->
                                            <path d="M471.6 21.7c-21.9-21.9-57.3-21.9-79.2 0L362.3 51.7l97.9 97.9 30.1-30.1c21.9-21.9 21.9-57.3 0-79.2L471.6 21.7zm-299.2 220c-6.1 6.1-10.8 13.6-13.5 21.9l-29.6 88.8c-2.9 8.6-.6 18.1 5.8 24.6s15.9 8.7 24.6 5.8l88.8-29.6c8.2-2.7 15.7-7.4 21.9-13.5L437.7 172.3 339.7 74.3 172.4 241.7zM96 64C43 64 0 107 0 160V416c0 53 43 96 96 96H352c53 0 96-43 96-96V320c0-17.7-14.3-32-32-32s-32 14.3-32 32v96c0 17.7-14.3 32-32 32H96c-17.7 0-32-14.3-32-32V160c0-17.7 14.3-32 32-32h96c17.7 0 32-14.3 32-32s-14.3-32-32-32H96z" />
                                        </svg>
                                    </button>
                                    <button type="button" data-bs-toggle="modal" data-bs-target="#deleteSoundModal" onclick="setModalSoundId('deleteSoundModal','@sound.Id')">
                                            <svg xmlns="http://www.w3.org/2000/svg" class="size-6 text-red-500 hover:text-red-600" fill="currentColor" viewBox="0 0 448 512">
                                                <!--!Font Awesome Free 6.5.2 by fontawesome - https://fontawesome.com License - https://fontawesome.com/license/free Copyright 2024 Fonticons, Inc.-->
                                            <path d="M135.2 17.7L128 32H32C14.3 32 0 46.3 0 64S14.3 96 32 96H416c17.7 0 32-14.3 32-32s-14.3-32-32-32H320l-7.2-14.3C307.4 6.8 296.3 0 284.2 0H163.8c-12.1 0-23.2 6.8-28.6 17.7zM416 128H32L53.2 467c1.6 25.3 22.6 45 47.9 45H346.9c25.3 0 46.3-19.7 47.9-45L416 128z" />
                                        </svg>
                                    </button>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    @* Text to speech *@
    <div id="TTSCard" class="dark:bg-gray-600 dark:!text-white border border-gray-400 rounded-[16px] shadow-lg background-gray-400 col-span-12 row-span-5">
        <div class="w-full h-full mx-auto my-8">
                <div class="flex flex-col w-full px-8 rounded-lg">
                <h2 class="text-2xl mb-2 font-bold">Text to Speech</h2>
                <p class="mb-4"><strong>Server:</strong> @Model.Guild.Name</p>
                <div class="p-4 w-full max-h-[400px] border border-gray-600 rounded-[16px] shadow-sm background-gray-400 overflow-y-auto">
                    @using (Html.BeginForm("TTSSubmit", "Home", FormMethod.Post, new { id = "textToSpeechForm", @class = "w-full" }))
                    {
                        <div class="p-4 w-full max-h-[400px] border border-gray-600 rounded-[16px] shadow-sm background-gray-400 overflow-y-auto">
                                <textarea name="query" class="w-full h-full dark:!bg-gray-300 dark:!text-gray-900"></textarea>
                        </div>
                        <button type="button" id="TTSPlayButton" class="mt-4 px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600">Play</button>
                            <button type="button" name="action" value="save" data-bs-toggle="modal" data-bs-target="#saveTTSModal" class="mt-4 px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-600">Save</button>
                        <button type="submit" name="action" value="playToServer" class="mt-4 px-4 py-2 bg-red-500 text-white rounded-md hover:bg-red-600">Play to Server</button>
                        <input type="hidden" name="ttsServerId" value="@Model.serverId"/>
                        <!-- Audio Player -->
                        <div style="display:none;">
                            <audio id="audioPlayer" controls preload="none">
                                <source src="" type="audio/mp3">
                                Your browser does not support the audio element.
                            </audio>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    @* Edit Modal *@
    <div class="modal fade" id="editSoundModal" tabindex="-1" aria-labelledby="editSoundModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content rounded-md shadow-lg dark:!bg-gray-600 dark:text-white">
                <div class="modal-header border-b border-gray-200 dark:border-gray-300">
                    <h5 class="modal-title" id="editSoundModalLabel">Edit Sound</h5>
                    <button type="button" class="close text-red-500" data-bs-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body bg-white dark:!bg-gray-600 p-5">
                    @using (Html.BeginForm("EditSound", "Home", FormMethod.Post, new { id = "EditSound", enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.EditSoundViewModel.Id, new { id = "SoundId" })
                        @Html.HiddenFor(model => model.EditSoundViewModel.serverId)

                        <div class="mt-4">
                            @Html.LabelFor(m => m.EditSoundViewModel.Name, new { @class = "block text-sm font-medium text-gray-300" })
                            @Html.TextBoxFor(m => m.EditSoundViewModel.Name, new { @class = "mt-1 p-2 w-full border rounded-md dark:!bg-gray-300 dark:!text-gray-900", id = "EditName" })
                            @Html.ValidationMessageFor(m => m.EditSoundViewModel.Name, "", new { @class = "text-red-600 text-sm" })
                        </div>

                        <div class="mt-4">
                            @Html.LabelFor(m => m.EditSoundViewModel.Emote, new { @class = "block text-sm font-medium text-gray-300" })
                            <input id="EditEmoteSelector" name="@Html.NameFor(m => m.EditSoundViewModel.Emote)" class="mt-1 p-2 w-full border rounded-md dark:!bg-gray-300 dark:!text-gray-900" />
                            @Html.ValidationMessageFor(m => m.EditSoundViewModel.Emote, "", new { @class = "text-red-600 text-sm" })
                        </div>

                        <div class="mt-4">
                            <button type="submit" class="px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-600">Save Sound</button>
                        </div>
                    }
                </div>
                <div class="modal-footer border-t border-gray-200 dark:border-gray-300">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    @* Delete Modal *@
    <div class="modal fade" id="deleteSoundModal" tabindex="-1" aria-labelledby="editSoundModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content rounded-md shadow-lg dark:!bg-gray-600 dark:text-white">
                <div class="modal-header border-b border-gray-200 dark:border-gray-300">
                    <h5 class="modal-title" id="editSoundModalLabel">Delete Sound</h5>
                    <button type="button" class="close text-red-500" data-bs-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body bg-white dark:!bg-gray-600 p-5">
                    @using (Html.BeginForm("DeleteSound", "Home", FormMethod.Post, new { id = "DeleteSound", enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.DeleteSoundViewModel.Id, new { id = "SoundId" })
                        @Html.HiddenFor(model => model.DeleteSoundViewModel.serverId)
                        <p class="mb-4"><strong>Name:</strong><span id="deleteSoundName"></span> </p>
                        <span>Are you sure you would like to delete this sound?</span>
                    }
                </div>
                <div class="modal-footer border-t border-gray-200 dark:border-gray-300">
                    <button type="submit" class="btn btn-primary" form="DeleteSound">Yes</button>
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">No</button>
                </div>
            </div>
        </div>
    </div>

    @* Save TTS Modal *@
    <div class="modal fade" id="saveTTSModal" tabindex="-1" aria-labelledby="editSoundModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered">
            <div class="modal-content rounded-md shadow-lg dark:!bg-gray-600 dark:text-white">
                <div class="modal-header border-b border-gray-200 dark:border-gray-300">
                    <h5 class="modal-title" id="editSoundModalLabel">Save TTS</h5>
                    <button type="button" class="close text-red-500" data-bs-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body bg-white dark:!bg-gray-600 p-5">
                    @using (Html.BeginForm("SaveTTS", "Home", FormMethod.Post, new { id = "SaveTTS", enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.EditSoundViewModel.serverId) 

                        <div class="mt-4">
                            @Html.LabelFor(m => m.EditSoundViewModel.Name, new { @class = "block text-sm font-medium text-gray-300" })
                            @Html.TextBoxFor(m => m.EditSoundViewModel.Name, new { @class = "mt-1 p-2 w-full border rounded-md dark:!bg-gray-300 dark:!text-gray-900", id = "EditName" })
                            @Html.ValidationMessageFor(m => m.EditSoundViewModel.Name, "", new { @class = "text-red-600 text-sm" })
                        </div>

                        <div class="mt-4">
                            @Html.LabelFor(m => m.EditSoundViewModel.Emote, new { @class = "block text-sm font-medium text-gray-300" })
                            <input id="EditEmoteSelector" name="@Html.NameFor(m => m.EditSoundViewModel.Emote)" class="mt-1 p-2 w-full border rounded-md dark:!bg-gray-300 dark:!text-gray-900" />
                            @Html.ValidationMessageFor(m => m.EditSoundViewModel.Emote, "", new { @class = "text-red-600 text-sm" })
                        </div>

                        <div class="mt-4">
                            <button type="submit" class="px-4 py-2 bg-green-500 text-white rounded-md hover:bg-green-600">Save TTS</button>
                        </div>
                    }
                </div>
                <div class="modal-footer border-t border-gray-200 dark:border-gray-300">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

</div>
}
else
{
    <div class="flex items-center justify-center min-h-screen bg-gray-100 dark:!bg-gray-800">
        <div id="select-a-merchant" class="tw-font-bold tw-text-center tw-justify-center tw-w-full tw-height-full tw-h-[590px] tw-flex tw-flex-col">
            <span class="tw-text-2xl tw-pb-4 dark:!text-white">Select a Server</span>
            <svg xmlns="http://www.w3.org/2000/svg" class="dark:!text-white" height="5em" fill="currentColor" viewBox="0 0 512 512"><!--! Font Awesome Free 6.4.2 by fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. --><path d="M320 0c-17.7 0-32 14.3-32 32s14.3 32 32 32h82.7L201.4 265.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L448 109.3V192c0 17.7 14.3 32 32 32s32-14.3 32-32V32c0-17.7-14.3-32-32-32H320zM80 32C35.8 32 0 67.8 0 112V432c0 44.2 35.8 80 80 80H400c44.2 0 80-35.8 80-80V320c0-17.7-14.3-32-32-32s-32 14.3-32 32V432c0 8.8-7.2 16-16 16H80c-8.8 0-16-7.2-16-16V112c0-8.8 7.2-16 16-16H192c17.7 0 32-14.3 32-32s-14.3-32-32-32H80z" /></svg>
        </div>
    </div>
}

@section Scripts {
    <script>
        // Remove the toast message after 5 seconds
        setTimeout(() => {
            const toast = document.getElementById('toast-message');
            if (toast) { 
                toast.remove();
            }
        }, 5000);
    </script>
    <script>
        $(document).ready(function () {
            // initialize emoji selector
            // TODO generalize this
            try {
                $("#EmoteSelector").emojioneArea({
                    pickerPosition: "bottom",
                    filtersPosition: "bottom",
                    tones: false,
                    autocomplete: false,
                    inline: true,
                    darkMode: true,
                    events: {
                        keyup: function (editor, event) {
                            let content = this.getText();
                            let matches = content.match(/[\ud800-\udbff][\udc00-\udfff]/g);
                            if (matches && matches.length > 0) {
                                this.setText(matches[0]);
                            } else {
                                this.setText(''); 
                            }
                        },
                        paste: function (editor, event) {
                            setTimeout(() => { 
                                let content = this.getText();
                                let matches = content.match(/[\ud800-\udbff][\udc00-\udfff]/g); 
                                if (matches && matches.length > 0) {
                                    this.setText(matches[0]); 
                                } else {
                                    this.setText('');
                                }
                            }, 100);
                        }
                    }
                });
            } catch (error) {
                console.error("Error initializing EmojiOne Area:", error);
            }
            try {
                $("#EditEmoteSelector").emojioneArea({
                    pickerPosition: "bottom",
                    filtersPosition: "bottom",
                    tones: false,
                    autocomplete: false,
                    inline: true,
                    darkMode: true,
                    events: {
                        keyup: function (editor, event) {
                            let content = this.getText();
                            let matches = content.match(/[\ud800-\udbff][\udc00-\udfff]/g); 
                            if (matches && matches.length > 0) {
                                this.setText(matches[0]); 
                            } else {
                                this.setText(''); 
                            }
                        },
                        paste: function (editor, event) {
                            setTimeout(() => { 
                                let content = this.getText();
                                let matches = content.match(/[\ud800-\udbff][\udc00-\udfff]/g); 
                                if (matches && matches.length > 0) {
                                    this.setText(matches[0]); 
                                } else {
                                    this.setText(''); 
                                }
                            }, 100);
                        }
                    }
                });
            } catch (error) {
                console.error("Error initializing EmojiOne Area:", error);
            }

            document.getElementById('SaveNewSound').onsubmit = function () {
                const emoteInput = $("#EmoteSelector").data("emojioneArea").getText();
                const isValidEmoji = /^[\ud800-\udbff][\udc00-\udfff]$/.test(emoteInput);

                if (!isValidEmoji) {
                    alert('Please select exactly one emoji.');
                    return false; 
                }

                return true; 
            };

            document.getElementById('EditSound').onsubmit = function () {
                const emoteInput = $("#EditEmoteSelector").data("emojioneArea").getText();
                const isValidEmoji = /^[\ud800-\udbff][\udc00-\udfff]$/.test(emoteInput);

                if (!isValidEmoji) {
                    alert('Please select exactly one emoji.');
                    return false; 
                }

                return true; 
            };
        });
    </script>
    <script>
        function setModalSoundId(modalId, soundId) {
            fetch(`/Home/GetSoundDetails?id=${soundId}`)
                .then(response => response.json())
                .then(data => {
                    console.log(data.name); 
                    console.log(data.emote);

                    var modal = document.getElementById(modalId);
                    var hidSoundId = modal.querySelector('#SoundId');

                    if (hidSoundId) {
                        hidSoundId.value = soundId; 
                    }

                    if (modalId == "editSoundModal") {
                        var nameInput = document.getElementById('EditName');
                        if (nameInput) {
                            nameInput.value = data.name;
                        }

                        var emoteInput = $('#EditEmoteSelector');
                        if (emoteInput.data("emojioneArea")) {
                            emoteInput.data("emojioneArea").setText(data.emote);
                        }
                    }
                    else if (modalId == "deleteSoundModal") {
                        var soundName = document.getElementById('deleteSoundName');
                        if (soundName) {
                            soundName.innerText = data.emote + data.name;
                        }
                    }
                })
                .catch(error => console.error('Error fetching sound details:', error));
        }
    </script>
    <script>
        $(document).ready(function () {
            $('#TTSPlayButton').click(function () {
                var textToSpeech = $('textarea[name="query"]').val();
                $.ajax({
                    url: '@Url.Action("PlayTTS", "Home")',
                    type: 'POST',
                    data: { query: textToSpeech },
                    success: function (response) {
                        console.log(response.audioUrl);
                        $('#audioPlayer source').attr('src', response.audioUrl);
                        $('#audioPlayer')[0].load(); 
                        $('#audioPlayer')[0].play(); 
                    },
                    error: function () {
                        alert('Error generating speech.');
                    }
                });
            });
        });
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            let nowPlayingPlayer = document.getElementById();
        });
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            let sounds = document.querySelectorAll('[data-itemType="sound"]');
            sounds.forEach((sound) => {
                let playPauseBtn = sound.querySelector('[data-type="playPauseBtn"]');
                let audio = sound.querySelector('audio');
                let seekSlider = sound.querySelector('[data-type="seekSlider"]');
                let currentTimeDisplay = sound.querySelector('[data-type="currentTime"]');
                let durationDisplay = sound.querySelector('[data-type="duration"]')

                audio.addEventListener("loadedmetadata", function () {
                    seekSlider.max = audio.duration;
                    durationDisplay.textContent = formatTime(audio.duration);
                });
                audio.addEventListener("timeupdate", function () {
                    seekSlider.value = audio.currentTime;
                    currentTimeDisplay.textContent = formatTime(audio.currentTime);
                });
                playPauseBtn.addEventListener("click", function () {
                    const pauseBtn = playPauseBtn.querySelector('[data-type="pause"]');
                    const playBtn = playPauseBtn.querySelector('[data-type="play"]');
                    if (audio.paused) {
                        audio.play();
                        pauseBtn.classList.remove('hidden');
                        playBtn.classList.add('hidden');
                    } else {
                        audio.pause();
                        playBtn.classList.remove('hidden');
                        pauseBtn.classList.add('hidden'); 
                    }
                });
                seekSlider.addEventListener("input", function () {
                    audio.currentTime = seekSlider.value;
                });
            });

            function formatTime(seconds) {
                let minutes = Math.floor(seconds / 60);
                seconds = Math.floor(seconds % 60);
                seconds = seconds < 10 ? "0" + seconds : seconds;
                return minutes + ":" + seconds;
            }
        });
    </script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/emojionearea/3.4.2/emojionearea.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/5.0.11/signalr.min.js"></script>
    <script src="/js/Index.js"></script>
    <script type="text/javascript">
        setGlobals('@Model.botUrl','@Model.serverId');
    </script>
}

