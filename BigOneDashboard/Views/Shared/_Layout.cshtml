@using Newtonsoft.Json;
<!DOCTYPE html>
<html class="dark" lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - BigOneDashboard</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/BigOneDashboard.styles.css" asp-append-version="true" />
    <link href="~/css/output.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/flowbite/2.3.0/flowbite.min.css" rel="stylesheet" />
</head>
<body class="dark:!bg-gray-800 pt-4 smoothScroll">
    <header>
        @{
            string? guilds = Context.Session.GetString("AvailableGuilds");
            List<Guild>? availableGuilds = null;
            if (guilds != null)
            {
                availableGuilds = JsonConvert.DeserializeObject<List<Guild>>(guilds);
            }
        }
        <nav class="bg-white dark:!bg-gray-900 fixed w-full z-20 top-0 start-0 border-b border-gray-200 dark:border-gray-600 h-[77px]">
            <div class="max-w-screen-xl flex flex-wrap items-center justify-between mx-auto px-4 pb-4 md:!mt-[-8px] mt-0 pt-4">
                <a href="/" class="flex items-center space-x-3 rtl:space-x-reverse group">
                    <img src="/Images/profilepic.jpg" class="h-8 w-8 rounded-full group-hover:opacity-50" alt="Profile Pic">
                    <span class="self-center text-2xl font-semibold whitespace-nowrap dark:group-hover:!text-blue-500 dark:!text-white">Big One Dashboard</span>
                </a>
                <div class="flex md:order-2 space-x-3 md:space-x-0 rtl:space-x-reverse">
                    @if (availableGuilds != null)
                    {
                        <div class="w-auto md:block md:w-auto" id="navbar-default">
                            @await Html.PartialAsync("_ServerSearchPartial", new ServerSearchPartialViewModel { AvailableGuilds = availableGuilds })
                        </div>
                    }
                    <button data-collapse-toggle="navbar-sticky" type="button" class="inline-flex items-center p-2 w-10 h-10 justify-center text-sm text-gray-500 rounded-lg md:hidden hover:bg-gray-100 focus:outline-none focus:ring-2 focus:ring-gray-200 dark:text-gray-400 dark:hover:bg-gray-700 dark:focus:ring-gray-600" aria-controls="navbar-sticky" aria-expanded="false">
                        <span class="sr-only">Open main menu</span>
                        <svg class="w-5 h-5" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 17 14">
                            <path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 1h15M1 7h15M1 13h15" />
                        </svg>
                    </button>
                </div>
                <div class="items-center justify-between hidden w-full md:flex md:w-auto md:order-1" id="navbar-sticky">
                    <ul class="flex flex-col p-4 md:!p-0 mt-4 font-medium border border-gray-100 rounded-lg bg-gray-50 md:!space-x-8 rtl:space-x-reverse md:!flex-row md:!mt-0 md:!border-0 md:!bg-white dark:bg-gray-800 md:dark:!bg-gray-900 ">
                        <li>
                            <a href="/" class="block py-2 px-3 text-gray-900 dark:!text-white bg-blue-700 rounded md:bg-transparent md:text-blue-700 md:p-0 md:dark:!text-blue-500 md:dark:hover:!text-blue-600" aria-current="page">Home</a>
                        </li>
                        <li>
                            <a href="/" class="block py-2 px-3 text-gray-900 dark:!text-white rounded hover:bg-gray-100 md:hover:bg-transparent md:hover:text-blue-700 md:p-0 md:dark:hover:!text-blue-500 dark:text-white dark:hover:bg-gray-700 dark:hover:text-white md:dark:hover:bg-transparent dark:border-gray-700" aria-current="page">Sound</a>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>
    <div class="dark:!bg-gray-800 !py-16" id="content">
        <div class="container">
            <main role="main">
                @RenderBody()
            </main>
        </div>
    </div>

    <footer class="dark:!bg-gray-800 border-t border-gray-200 dark:border-gray-600 footer text-muted">
        <div class="container">
            &copy; 2024 - BigOneDashboard - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/flowbite/2.3.0/flowbite.min.js"></script>
    @await RenderSectionAsync("Scripts", required: false)

    <script>
        const dropdownButton = document.getElementById('dropdown-button');
        if (dropdownButton) {
            const dropdownMenu = document.getElementById('dropdown-menu');
            const searchInput = document.getElementById('search-input');
            let isOpen = false; 

            function toggleDropdown() {
                isOpen = !isOpen;
                dropdownMenu.classList.toggle('hidden', !isOpen);
            }

            dropdownButton.addEventListener('click', () => {
                toggleDropdown();
            });

            searchInput.addEventListener('input', () => {
                const searchTerm = searchInput.value.toLowerCase();
                const items = dropdownMenu.querySelectorAll('a');

                items.forEach((item) => {
                    const text = item.textContent.toLowerCase();
                    if (text.includes(searchTerm)) {
                        item.style.display = 'block';
                    } else {
                        item.style.display = 'none';
                    }
                });
            });
            dropdownButton.addEventListener('blur',() => {
                setTimeout(() => {
                    if (document.activeElement != searchInput && !Array.from(document.querySelectorAll("[data-dropdown-element='server']")).includes(document.activeElement)) {
                        toggleDropdown();
                    }
                }, 0);
            });
            searchInput.addEventListener('blur', () => {
                setTimeout(() => {
                    if (document.activeElement != dropdownButton && !Array.from(document.querySelectorAll("[data-dropdown-element='server']")).includes(document.activeElement)) {
                        toggleDropdown();
                    }
                }, 0);
            });
        }
    </script>
</body>
</html>
